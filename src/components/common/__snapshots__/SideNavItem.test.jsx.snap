// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SideNavItem /> renders the SideNavItem component correctly 1`] = `
<styled.div>
  <NavLink
    activeClassName="active-nav"
    to={
      Object {
        "addMatchers": [Function],
        "advanceTimersByTime": [Function],
        "advanceTimersToNextTimer": [Function],
        "autoMockOff": [Function],
        "autoMockOn": [Function],
        "clearAllMocks": [Function],
        "clearAllTimers": [Function],
        "deepUnmock": [Function],
        "disableAutomock": [Function],
        "doMock": [Function],
        "dontMock": [Function],
        "enableAutomock": [Function],
        "fn": [Function],
        "genMockFromModule": [Function],
        "getTimerCount": [Function],
        "isMockFunction": [Function],
        "isolateModules": [Function],
        "mock": [Function],
        "requireActual": [Function],
        "requireMock": [Function],
        "resetAllMocks": [Function],
        "resetModuleRegistry": [Function],
        "resetModules": [Function],
        "restoreAllMocks": [Function],
        "retryTimes": [Function],
        "runAllImmediates": [Function],
        "runAllTicks": [Function],
        "runAllTimers": [Function],
        "runOnlyPendingTimers": [Function],
        "runTimersToTime": [Function],
        "setMock": [Function],
        "setTimeout": [Function],
        "spyOn": [Function],
        "unmock": [Function],
        "useFakeTimers": [Function],
        "useRealTimers": [Function],
      }
    }
  >
    <i
      className="material-icons"
    >
      <Component />
    </i>
  </NavLink>
  <NavLink
    activeClassName="active-nav"
    to={
      Object {
        "addMatchers": [Function],
        "advanceTimersByTime": [Function],
        "advanceTimersToNextTimer": [Function],
        "autoMockOff": [Function],
        "autoMockOn": [Function],
        "clearAllMocks": [Function],
        "clearAllTimers": [Function],
        "deepUnmock": [Function],
        "disableAutomock": [Function],
        "doMock": [Function],
        "dontMock": [Function],
        "enableAutomock": [Function],
        "fn": [Function],
        "genMockFromModule": [Function],
        "getTimerCount": [Function],
        "isMockFunction": [Function],
        "isolateModules": [Function],
        "mock": [Function],
        "requireActual": [Function],
        "requireMock": [Function],
        "resetAllMocks": [Function],
        "resetModuleRegistry": [Function],
        "resetModules": [Function],
        "restoreAllMocks": [Function],
        "retryTimes": [Function],
        "runAllImmediates": [Function],
        "runAllTicks": [Function],
        "runAllTimers": [Function],
        "runOnlyPendingTimers": [Function],
        "runTimersToTime": [Function],
        "setMock": [Function],
        "setTimeout": [Function],
        "spyOn": [Function],
        "unmock": [Function],
        "useFakeTimers": [Function],
        "useRealTimers": [Function],
      }
    }
  >
    <span>
      <Component />
    </span>
  </NavLink>
</styled.div>
`;
